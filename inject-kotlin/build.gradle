plugins {
    id 'java'
    id "org.jetbrains.kotlin.jvm"
    id "com.google.devtools.ksp" version "1.7.10-1.0.6"
    id "io.micronaut.build.internal.convention-library"
}

dependencies {
    api project(":inject")
    api project(':aop')

    implementation("com.google.devtools.ksp:symbol-processing-api:1.7.10-1.0.6")
    if (!JavaVersion.current().isJava9Compatible()) {
        api files(org.gradle.internal.jvm.Jvm.current().toolsJar)
    }
    kspTest(project)
    kspTest libs.bundles.asm
    testImplementation("com.github.tschuchortdev:kotlin-compile-testing-ksp:1.4.9")
    testImplementation libs.kotlin.stdlib
    testImplementation libs.managed.jackson.annotations
    testImplementation libs.managed.validation
    testImplementation libs.managed.reactor
    testImplementation libs.hibernate
    testImplementation project(":validation")
    testImplementation libs.javax.persistence
    testImplementation project(":runtime")
    testImplementation(libs.managed.neo4j.bolt) {
        version {
            require "1.4.5"
        }
    }
}

afterEvaluate {
    sourcesJar {
        from "$projectDir/src/main/kotlin"
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs = ['-Xjvm-default=all']
    }
}

tasks.named("compileTestGroovy") {
    classpath += files(tasks.compileTestKotlin)
}

tasks.named("test") {
    classpath += files(tasks.compileTestKotlin)
    testLogging {
        showStandardStreams = true
    }
}
